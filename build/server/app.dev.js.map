{"version":3,"sources":["../../server/app.dev.js"],"names":["app","port","compiler","console","log","use","noInfo","publicPath","staticPublicPath","config","loggerLevel","listen","error","info"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACA,MAAMC,OAAO,IAAb;AACA,MAAMC,WAAW,4CAAjB;;AAEAC,QAAQC,GAAR,CAAY,iBAAZ;;AAEAD,QAAQC,GAAR,CAAY,gCAAZ;AACAJ,IAAIK,GAAJ,CACE,oCACEH,QADF,EAEE;AACEI,UAAQ,IADV;AAEEC,cAAY,iBAAOC;AAFrB,CAFF,CADF;;AAUAL,QAAQC,GAAR,CAAY,kCAAZ;AACAJ,IAAIK,GAAJ,CAAQ,oCAAqBH,QAArB,CAAR;AACAF,MAAM,mBAAaA,GAAb,EAAkB;AACtBS,0BADsB;AAEtBC,eAAa;AAFS,CAAlB,CAAN;AAIA;AACAV,IAAIW,MAAJ,CAAWV,IAAX,EAAiBW,SAAS;;AAExB,MAAIA,KAAJ,EAAW;;AAETT,YAAQS,KAAR,CAAcA,KAAd;AAED,GAJD,MAIO;;AAELT,YAAQU,IAAR,CAAa,6EAAb,EAA4FZ,IAA5F,EAAkGA,IAAlG;AAED;AAEF,CAZD;;kBAceD,G","file":"app.dev.js","sourcesContent":["import express from 'express'\nimport webpack from 'webpack'\nimport webpackDevMiddleware from 'webpack-dev-middleware'\nimport webpackHotMiddleware from 'webpack-hot-middleware'\n\nimport webpackConfig from '../webpack.dev.config'\nimport config from '../config.dev'\nimport configureApp from './app'\n\nlet app = express()\nconst port = 5000\nconst compiler = webpack(webpackConfig)\n\nconsole.log('configuring dev')\n\nconsole.log('configuring webpack middleware')\napp.use(\n  webpackDevMiddleware(\n    compiler,\n    {\n      noInfo: true,\n      publicPath: config.staticPublicPath\n    }\n  )\n)\n\nconsole.log('configuring webpack hot reloader')\napp.use(webpackHotMiddleware(compiler))\napp = configureApp(app, {\n  config,\n  loggerLevel: 'dev'\n})\n// start app\napp.listen(port, error => {\n\n  if (error) {\n\n    console.error(error)\n\n  } else {\n\n    console.info('==> ðŸŒŽ  Listening on port %s. Open up http://localhost:%s/ in your browser.', port, port)\n\n  }\n\n})\n\nexport default app\n"]}